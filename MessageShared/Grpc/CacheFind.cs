// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: CacheFind.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MessageShared {

  /// <summary>Holder for reflection information generated from CacheFind.proto</summary>
  public static partial class CacheFindReflection {

    #region Descriptor
    /// <summary>File descriptor for CacheFind.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CacheFindReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9DYWNoZUZpbmQucHJvdG8SDU1lc3NhZ2VTaGFyZWQibQoNbUNhY2hlUmVx",
            "dWVzdBIMCgRfa2V5GAEgASgJEhAKCHBhZ2VTaXplGAIgASgFEhIKCnBhZ2VO",
            "dW1iZXIYAyABKAUSFgoOanNvbkNvbmRpdGlvbnMYBCABKAkSEAoIaGFzQ2Fj",
            "aGUYBSABKAgigQEKC21DYWNoZVJlcGx5EgoKAm9rGAEgASgIEi0KB3JlcXVl",
            "c3QYAiABKAsyHC5NZXNzYWdlU2hhcmVkLm1DYWNoZVJlcXVlc3QSDgoGb3V0",
            "cHV0GAMgASgJEhMKC2NvdW50UmVzdWx0GAQgASgFEhIKCnRvdGFsSXRlbXMY",
            "BSABKAUyUwoNbUNhY2hlU2VydmljZRJCCgRTZW5kEhwuTWVzc2FnZVNoYXJl",
            "ZC5tQ2FjaGVSZXF1ZXN0GhouTWVzc2FnZVNoYXJlZC5tQ2FjaGVSZXBseSIA",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MessageShared.mCacheRequest), global::MessageShared.mCacheRequest.Parser, new[]{ "Key", "PageSize", "PageNumber", "JsonConditions", "HasCache" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MessageShared.mCacheReply), global::MessageShared.mCacheReply.Parser, new[]{ "Ok", "Request", "Output", "CountResult", "TotalItems" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class mCacheRequest : pb::IMessage<mCacheRequest> {
    private static readonly pb::MessageParser<mCacheRequest> _parser = new pb::MessageParser<mCacheRequest>(() => new mCacheRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<mCacheRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MessageShared.CacheFindReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public mCacheRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public mCacheRequest(mCacheRequest other) : this() {
      Key_ = other.Key_;
      pageSize_ = other.pageSize_;
      pageNumber_ = other.pageNumber_;
      jsonConditions_ = other.jsonConditions_;
      hasCache_ = other.hasCache_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public mCacheRequest Clone() {
      return new mCacheRequest(this);
    }

    /// <summary>Field number for the "_key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string Key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return Key_; }
      set {
        Key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pageSize" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "pageNumber" field.</summary>
    public const int PageNumberFieldNumber = 3;
    private int pageNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageNumber {
      get { return pageNumber_; }
      set {
        pageNumber_ = value;
      }
    }

    /// <summary>Field number for the "jsonConditions" field.</summary>
    public const int JsonConditionsFieldNumber = 4;
    private string jsonConditions_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonConditions {
      get { return jsonConditions_; }
      set {
        jsonConditions_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hasCache" field.</summary>
    public const int HasCacheFieldNumber = 5;
    private bool hasCache_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCache {
      get { return hasCache_; }
      set {
        hasCache_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as mCacheRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(mCacheRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (PageSize != other.PageSize) return false;
      if (PageNumber != other.PageNumber) return false;
      if (JsonConditions != other.JsonConditions) return false;
      if (HasCache != other.HasCache) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageNumber != 0) hash ^= PageNumber.GetHashCode();
      if (JsonConditions.Length != 0) hash ^= JsonConditions.GetHashCode();
      if (HasCache != false) hash ^= HasCache.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageNumber != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PageNumber);
      }
      if (JsonConditions.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(JsonConditions);
      }
      if (HasCache != false) {
        output.WriteRawTag(40);
        output.WriteBool(HasCache);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageNumber);
      }
      if (JsonConditions.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonConditions);
      }
      if (HasCache != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(mCacheRequest other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageNumber != 0) {
        PageNumber = other.PageNumber;
      }
      if (other.JsonConditions.Length != 0) {
        JsonConditions = other.JsonConditions;
      }
      if (other.HasCache != false) {
        HasCache = other.HasCache;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 24: {
            PageNumber = input.ReadInt32();
            break;
          }
          case 34: {
            JsonConditions = input.ReadString();
            break;
          }
          case 40: {
            HasCache = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class mCacheReply : pb::IMessage<mCacheReply> {
    private static readonly pb::MessageParser<mCacheReply> _parser = new pb::MessageParser<mCacheReply>(() => new mCacheReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<mCacheReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MessageShared.CacheFindReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public mCacheReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public mCacheReply(mCacheReply other) : this() {
      ok_ = other.ok_;
      request_ = other.request_ != null ? other.request_.Clone() : null;
      output_ = other.output_;
      countResult_ = other.countResult_;
      totalItems_ = other.totalItems_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public mCacheReply Clone() {
      return new mCacheReply(this);
    }

    /// <summary>Field number for the "ok" field.</summary>
    public const int OkFieldNumber = 1;
    private bool ok_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ok {
      get { return ok_; }
      set {
        ok_ = value;
      }
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 2;
    private global::MessageShared.mCacheRequest request_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MessageShared.mCacheRequest Request {
      get { return request_; }
      set {
        request_ = value;
      }
    }

    /// <summary>Field number for the "output" field.</summary>
    public const int OutputFieldNumber = 3;
    private string output_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Output {
      get { return output_; }
      set {
        output_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "countResult" field.</summary>
    public const int CountResultFieldNumber = 4;
    private int countResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CountResult {
      get { return countResult_; }
      set {
        countResult_ = value;
      }
    }

    /// <summary>Field number for the "totalItems" field.</summary>
    public const int TotalItemsFieldNumber = 5;
    private int totalItems_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalItems {
      get { return totalItems_; }
      set {
        totalItems_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as mCacheReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(mCacheReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ok != other.Ok) return false;
      if (!object.Equals(Request, other.Request)) return false;
      if (Output != other.Output) return false;
      if (CountResult != other.CountResult) return false;
      if (TotalItems != other.TotalItems) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ok != false) hash ^= Ok.GetHashCode();
      if (request_ != null) hash ^= Request.GetHashCode();
      if (Output.Length != 0) hash ^= Output.GetHashCode();
      if (CountResult != 0) hash ^= CountResult.GetHashCode();
      if (TotalItems != 0) hash ^= TotalItems.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ok != false) {
        output.WriteRawTag(8);
        output.WriteBool(Ok);
      }
      if (request_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Request);
      }
      if (Output.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Output);
      }
      if (CountResult != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CountResult);
      }
      if (TotalItems != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TotalItems);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ok != false) {
        size += 1 + 1;
      }
      if (request_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      if (Output.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Output);
      }
      if (CountResult != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CountResult);
      }
      if (TotalItems != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalItems);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(mCacheReply other) {
      if (other == null) {
        return;
      }
      if (other.Ok != false) {
        Ok = other.Ok;
      }
      if (other.request_ != null) {
        if (request_ == null) {
          Request = new global::MessageShared.mCacheRequest();
        }
        Request.MergeFrom(other.Request);
      }
      if (other.Output.Length != 0) {
        Output = other.Output;
      }
      if (other.CountResult != 0) {
        CountResult = other.CountResult;
      }
      if (other.TotalItems != 0) {
        TotalItems = other.TotalItems;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ok = input.ReadBool();
            break;
          }
          case 18: {
            if (request_ == null) {
              Request = new global::MessageShared.mCacheRequest();
            }
            input.ReadMessage(Request);
            break;
          }
          case 26: {
            Output = input.ReadString();
            break;
          }
          case 32: {
            CountResult = input.ReadInt32();
            break;
          }
          case 40: {
            TotalItems = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
